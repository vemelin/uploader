{"ast":null,"code":"var _jsxFileName = \"/workspaces/uploader/src/DataGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Upload, Download, Search, Filter, Trash2, Plus, Edit3 } from 'lucide-react';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataGrid = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [isUploading, setIsUploading] = useState(false);\n  const [selectedRows, setSelectedRows] = useState(new Set());\n  const [editingCell, setEditingCell] = useState(null);\n\n  // Reset to initial state\n  const resetDataGrid = () => {\n    setData([]);\n    setColumns([]);\n    setFilteredData([]);\n    setSearchTerm('');\n    setSortConfig({\n      key: null,\n      direction: 'asc'\n    });\n    setSelectedRows(new Set());\n    setEditingCell(null);\n  };\n\n  // Handle file upload\n  const handleFileUpload = useCallback(event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setIsUploading(true);\n    if (file.type === 'text/csv' || file.name.endsWith('.csv')) {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: results => {\n          if (results.data && results.data.length > 0) {\n            const cols = Object.keys(results.data[0]).map(key => ({\n              key: key.trim(),\n              label: key.trim(),\n              type: 'text'\n            }));\n            setColumns(cols);\n            setData(results.data);\n            setFilteredData(results.data);\n          }\n          setIsUploading(false);\n        },\n        error: error => {\n          console.error('CSV parsing error:', error);\n          setIsUploading(false);\n        }\n      });\n    } else if (file.type === 'application/json') {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const jsonData = JSON.parse(e.target.result);\n          const arrayData = Array.isArray(jsonData) ? jsonData : [jsonData];\n          if (arrayData.length > 0) {\n            const cols = Object.keys(arrayData[0]).map(key => ({\n              key,\n              label: key,\n              type: 'text'\n            }));\n            setColumns(cols);\n            setData(arrayData);\n            setFilteredData(arrayData);\n          }\n        } catch (error) {\n          console.error('JSON parsing error:', error);\n        }\n        setIsUploading(false);\n      };\n      reader.readAsText(file);\n    }\n\n    // Reset file input\n    event.target.value = '';\n  }, []);\n\n  // Search functionality\n  const handleSearch = useCallback(term => {\n    setSearchTerm(term);\n    if (!term.trim()) {\n      setFilteredData(data);\n      return;\n    }\n    const filtered = data.filter(row => Object.values(row).some(value => String(value).toLowerCase().includes(term.toLowerCase())));\n    setFilteredData(filtered);\n  }, [data]);\n\n  // Sort functionality\n  const handleSort = useCallback(columnKey => {\n    let direction = 'asc';\n    if (sortConfig.key === columnKey && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    const sorted = [...filteredData].sort((a, b) => {\n      const aVal = a[columnKey];\n      const bVal = b[columnKey];\n      if (aVal < bVal) return direction === 'asc' ? -1 : 1;\n      if (aVal > bVal) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n    setFilteredData(sorted);\n    setSortConfig({\n      key: columnKey,\n      direction\n    });\n  }, [filteredData, sortConfig]);\n\n  // Row selection\n  const toggleRowSelection = rowIndex => {\n    const newSelected = new Set(selectedRows);\n    if (newSelected.has(rowIndex)) {\n      newSelected.delete(rowIndex);\n    } else {\n      newSelected.add(rowIndex);\n    }\n    setSelectedRows(newSelected);\n  };\n\n  // Cell editing\n  const handleCellEdit = (rowIndex, columnKey, newValue) => {\n    const newData = [...data];\n    const actualRowIndex = data.findIndex(row => row === filteredData[rowIndex]);\n    newData[actualRowIndex] = {\n      ...newData[actualRowIndex],\n      [columnKey]: newValue\n    };\n    setData(newData);\n    const newFilteredData = [...filteredData];\n    newFilteredData[rowIndex] = {\n      ...newFilteredData[rowIndex],\n      [columnKey]: newValue\n    };\n    setFilteredData(newFilteredData);\n    setEditingCell(null);\n  };\n\n  // Add new row\n  const addNewRow = () => {\n    const newRow = {};\n    columns.forEach(col => {\n      newRow[col.key] = '';\n    });\n    const newData = [...data, newRow];\n    setData(newData);\n    setFilteredData(newData);\n  };\n\n  // Delete selected rows\n  const deleteSelectedRows = () => {\n    const selectedIndices = Array.from(selectedRows);\n    const rowsToDelete = selectedIndices.map(index => filteredData[index]);\n    const newData = data.filter(row => !rowsToDelete.includes(row));\n    setData(newData);\n    setFilteredData(newData);\n    setSelectedRows(new Set());\n  };\n\n  // Export data\n  const exportData = () => {\n    const csv = Papa.unparse(filteredData);\n    const blob = new Blob([csv], {\n      type: 'text/csv'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'data-export.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-7xl mx-auto p-6 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-900 mb-2\",\n        children: \"Data Grid Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Upload CSV or JSON files to view and edit your data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), data.length === 0 ?\n    /*#__PURE__*/\n    /* Upload Section */\n    _jsxDEV(\"div\", {\n      className: \"p-6 border-2 border-dashed border-gray-300 rounded-lg hover:border-blue-400 transition-colors\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Upload, {\n          className: \"mx-auto h-12 w-12 text-gray-400 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"cursor-pointer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg font-medium text-gray-700 hover:text-blue-600\",\n            children: isUploading ? 'Processing...' : 'Click to upload or drag and drop'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"hidden\",\n            accept: \".csv,.json\",\n            onChange: handleFileUpload,\n            disabled: isUploading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2\",\n          children: \"CSV or JSON files supported\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex flex-wrap gap-4 items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Search, {\n              className: \"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search data...\",\n              value: searchTerm,\n              onChange: e => handleSearch(e.target.value),\n              className: \"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewRow,\n            className: \"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), \"Add Row\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetDataGrid,\n            className: \"flex items-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), \"New Upload\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), selectedRows.size > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteSelectedRows,\n            className: \"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Trash2, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), \"Delete (\", selectedRows.size, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportData,\n            className: \"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\",\n            children: [/*#__PURE__*/_jsxDEV(Download, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), \"Export CSV\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 text-sm text-gray-600\",\n        children: [\"Showing \", filteredData.length, \" of \", data.length, \" rows\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto border border-gray-200 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"min-w-full divide-y divide-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-50\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-3 text-left\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onChange: e => {\n                    if (e.target.checked) {\n                      setSelectedRows(new Set(filteredData.map((_, i) => i)));\n                    } else {\n                      setSelectedRows(new Set());\n                    }\n                  },\n                  checked: selectedRows.size === filteredData.length && filteredData.length > 0,\n                  className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this), columns.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\",\n                onClick: () => handleSort(column.key),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center gap-2\",\n                  children: [column.label, sortConfig.key === column.key && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-blue-600\",\n                    children: sortConfig.direction === 'asc' ? '↑' : '↓'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)\n              }, column.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            className: \"bg-white divide-y divide-gray-200\",\n            children: filteredData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: selectedRows.has(rowIndex) ? 'bg-blue-50' : 'hover:bg-gray-50',\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedRows.has(rowIndex),\n                  onChange: () => toggleRowSelection(rowIndex),\n                  className: \"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"px-4 py-3 text-sm text-gray-900\",\n                children: (editingCell === null || editingCell === void 0 ? void 0 : editingCell.row) === rowIndex && (editingCell === null || editingCell === void 0 ? void 0 : editingCell.column) === column.key ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: row[column.key] || '',\n                  onChange: e => handleCellEdit(rowIndex, column.key, e.target.value),\n                  onBlur: () => setEditingCell(null),\n                  onKeyPress: e => {\n                    if (e.key === 'Enter') {\n                      setEditingCell(null);\n                    }\n                  },\n                  className: \"w-full px-2 py-1 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                  autoFocus: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cursor-pointer hover:bg-gray-100 p-1 rounded group flex items-center justify-between\",\n                  onClick: () => setEditingCell({\n                    row: rowIndex,\n                    column: column.key\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: row[column.key] || ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Edit3, {\n                    className: \"w-3 h-3 text-gray-400 opacity-0 group-hover:opacity-100 transition-opacity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 27\n                }, this)\n              }, column.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 23\n              }, this))]\n            }, rowIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), filteredData.length === 0 && searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center py-8 text-gray-500\",\n        children: [\"No results found for \\\"\", searchTerm, \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), data.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8 pt-6 border-t border-gray-200 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetDataGrid,\n        className: \"flex items-center gap-2 px-6 py-3 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors font-medium\",\n        children: \"EXIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors font-medium\",\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(DataGrid, \"A1txe/hMZNWkABQ1APqqGFVM9YI=\");\n_c = DataGrid;\nexport default DataGrid;\nvar _c;\n$RefreshReg$(_c, \"DataGrid\");","map":{"version":3,"names":["React","useState","useCallback","Upload","Download","Search","Filter","Trash2","Plus","Edit3","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","DataGrid","_s","data","setData","columns","setColumns","filteredData","setFilteredData","searchTerm","setSearchTerm","sortConfig","setSortConfig","key","direction","isUploading","setIsUploading","selectedRows","setSelectedRows","Set","editingCell","setEditingCell","resetDataGrid","handleFileUpload","event","file","target","files","type","name","endsWith","parse","header","skipEmptyLines","dynamicTyping","complete","results","length","cols","Object","keys","map","trim","label","error","console","reader","FileReader","onload","e","jsonData","JSON","result","arrayData","Array","isArray","readAsText","value","handleSearch","term","filtered","filter","row","values","some","String","toLowerCase","includes","handleSort","columnKey","sorted","sort","a","b","aVal","bVal","toggleRowSelection","rowIndex","newSelected","has","delete","add","handleCellEdit","newValue","newData","actualRowIndex","findIndex","newFilteredData","addNewRow","newRow","forEach","col","deleteSelectedRows","selectedIndices","from","rowsToDelete","index","exportData","csv","unparse","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","placeholder","onClick","size","checked","_","i","column","onBlur","onKeyPress","autoFocus","_c","$RefreshReg$"],"sources":["/workspaces/uploader/src/DataGrid.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Upload, Download, Search, Filter, Trash2, Plus, Edit3 } from 'lucide-react';\nimport Papa from 'papaparse';\n\nconst DataGrid = () => {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\n  const [isUploading, setIsUploading] = useState(false);\n  const [selectedRows, setSelectedRows] = useState(new Set());\n  const [editingCell, setEditingCell] = useState(null);\n\n  // Reset to initial state\n  const resetDataGrid = () => {\n    setData([]);\n    setColumns([]);\n    setFilteredData([]);\n    setSearchTerm('');\n    setSortConfig({ key: null, direction: 'asc' });\n    setSelectedRows(new Set());\n    setEditingCell(null);\n  };\n\n  // Handle file upload\n  const handleFileUpload = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    \n    if (file.type === 'text/csv' || file.name.endsWith('.csv')) {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: (results) => {\n          if (results.data && results.data.length > 0) {\n            const cols = Object.keys(results.data[0]).map(key => ({\n              key: key.trim(),\n              label: key.trim(),\n              type: 'text'\n            }));\n            setColumns(cols);\n            setData(results.data);\n            setFilteredData(results.data);\n          }\n          setIsUploading(false);\n        },\n        error: (error) => {\n          console.error('CSV parsing error:', error);\n          setIsUploading(false);\n        }\n      });\n    } else if (file.type === 'application/json') {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const jsonData = JSON.parse(e.target.result);\n          const arrayData = Array.isArray(jsonData) ? jsonData : [jsonData];\n          \n          if (arrayData.length > 0) {\n            const cols = Object.keys(arrayData[0]).map(key => ({\n              key,\n              label: key,\n              type: 'text'\n            }));\n            setColumns(cols);\n            setData(arrayData);\n            setFilteredData(arrayData);\n          }\n        } catch (error) {\n          console.error('JSON parsing error:', error);\n        }\n        setIsUploading(false);\n      };\n      reader.readAsText(file);\n    }\n    \n    // Reset file input\n    event.target.value = '';\n  }, []);\n\n  // Search functionality\n  const handleSearch = useCallback((term) => {\n    setSearchTerm(term);\n    if (!term.trim()) {\n      setFilteredData(data);\n      return;\n    }\n\n    const filtered = data.filter(row =>\n      Object.values(row).some(value =>\n        String(value).toLowerCase().includes(term.toLowerCase())\n      )\n    );\n    setFilteredData(filtered);\n  }, [data]);\n\n  // Sort functionality\n  const handleSort = useCallback((columnKey) => {\n    let direction = 'asc';\n    if (sortConfig.key === columnKey && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n\n    const sorted = [...filteredData].sort((a, b) => {\n      const aVal = a[columnKey];\n      const bVal = b[columnKey];\n      \n      if (aVal < bVal) return direction === 'asc' ? -1 : 1;\n      if (aVal > bVal) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    setFilteredData(sorted);\n    setSortConfig({ key: columnKey, direction });\n  }, [filteredData, sortConfig]);\n\n  // Row selection\n  const toggleRowSelection = (rowIndex) => {\n    const newSelected = new Set(selectedRows);\n    if (newSelected.has(rowIndex)) {\n      newSelected.delete(rowIndex);\n    } else {\n      newSelected.add(rowIndex);\n    }\n    setSelectedRows(newSelected);\n  };\n\n  // Cell editing\n  const handleCellEdit = (rowIndex, columnKey, newValue) => {\n    const newData = [...data];\n    const actualRowIndex = data.findIndex(row => row === filteredData[rowIndex]);\n    newData[actualRowIndex] = { ...newData[actualRowIndex], [columnKey]: newValue };\n    setData(newData);\n    \n    const newFilteredData = [...filteredData];\n    newFilteredData[rowIndex] = { ...newFilteredData[rowIndex], [columnKey]: newValue };\n    setFilteredData(newFilteredData);\n    setEditingCell(null);\n  };\n\n  // Add new row\n  const addNewRow = () => {\n    const newRow = {};\n    columns.forEach(col => {\n      newRow[col.key] = '';\n    });\n    const newData = [...data, newRow];\n    setData(newData);\n    setFilteredData(newData);\n  };\n\n  // Delete selected rows\n  const deleteSelectedRows = () => {\n    const selectedIndices = Array.from(selectedRows);\n    const rowsToDelete = selectedIndices.map(index => filteredData[index]);\n    \n    const newData = data.filter(row => !rowsToDelete.includes(row));\n    setData(newData);\n    setFilteredData(newData);\n    setSelectedRows(new Set());\n  };\n\n  // Export data\n  const exportData = () => {\n    const csv = Papa.unparse(filteredData);\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'data-export.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"w-full max-w-7xl mx-auto p-6 bg-white\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Data Grid Manager</h1>\n        <p className=\"text-gray-600\">Upload CSV or JSON files to view and edit your data</p>\n      </div>\n\n      {/* Show uploader when no data, show table when data exists */}\n      {data.length === 0 ? (\n        /* Upload Section */\n        <div className=\"p-6 border-2 border-dashed border-gray-300 rounded-lg hover:border-blue-400 transition-colors\">\n          <div className=\"text-center\">\n            <Upload className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <label className=\"cursor-pointer\">\n              <span className=\"text-lg font-medium text-gray-700 hover:text-blue-600\">\n                {isUploading ? 'Processing...' : 'Click to upload or drag and drop'}\n              </span>\n              <input\n                type=\"file\"\n                className=\"hidden\"\n                accept=\".csv,.json\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              />\n            </label>\n            <p className=\"text-sm text-gray-500 mt-2\">CSV or JSON files supported</p>\n          </div>\n        </div>\n      ) : (\n        <>\n          {/* Controls */}\n          <div className=\"mb-4 flex flex-wrap gap-4 items-center justify-between\">\n            <div className=\"flex gap-2 items-center\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search data...\"\n                  value={searchTerm}\n                  onChange={(e) => handleSearch(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              <button\n                onClick={addNewRow}\n                className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                Add Row\n              </button>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={resetDataGrid}\n                className=\"flex items-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\"\n              >\n                <Upload className=\"w-4 h-4\" />\n                New Upload\n              </button>\n              {selectedRows.size > 0 && (\n                <button\n                  onClick={deleteSelectedRows}\n                  className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                  Delete ({selectedRows.size})\n                </button>\n              )}\n              <button\n                onClick={exportData}\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                <Download className=\"w-4 h-4\" />\n                Export CSV\n              </button>\n            </div>\n          </div>\n\n          {/* Data Stats */}\n          <div className=\"mb-4 text-sm text-gray-600\">\n            Showing {filteredData.length} of {data.length} rows\n          </div>\n\n          {/* Data Grid */}\n          <div className=\"overflow-x-auto border border-gray-200 rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-3 text-left\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setSelectedRows(new Set(filteredData.map((_, i) => i)));\n                        } else {\n                          setSelectedRows(new Set());\n                        }\n                      }}\n                      checked={selectedRows.size === filteredData.length && filteredData.length > 0}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                  </th>\n                  {columns.map((column) => (\n                    <th\n                      key={column.key}\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\"\n                      onClick={() => handleSort(column.key)}\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        {column.label}\n                        {sortConfig.key === column.key && (\n                          <span className=\"text-blue-600\">\n                            {sortConfig.direction === 'asc' ? '↑' : '↓'}\n                          </span>\n                        )}\n                      </div>\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredData.map((row, rowIndex) => (\n                  <tr key={rowIndex} className={selectedRows.has(rowIndex) ? 'bg-blue-50' : 'hover:bg-gray-50'}>\n                    <td className=\"px-4 py-3\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedRows.has(rowIndex)}\n                        onChange={() => toggleRowSelection(rowIndex)}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      />\n                    </td>\n                    {columns.map((column) => (\n                      <td key={column.key} className=\"px-4 py-3 text-sm text-gray-900\">\n                        {editingCell?.row === rowIndex && editingCell?.column === column.key ? (\n                          <input\n                            type=\"text\"\n                            value={row[column.key] || ''}\n                            onChange={(e) => handleCellEdit(rowIndex, column.key, e.target.value)}\n                            onBlur={() => setEditingCell(null)}\n                            onKeyPress={(e) => {\n                              if (e.key === 'Enter') {\n                                setEditingCell(null);\n                              }\n                            }}\n                            className=\"w-full px-2 py-1 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                            autoFocus\n                          />\n                        ) : (\n                          <div\n                            className=\"cursor-pointer hover:bg-gray-100 p-1 rounded group flex items-center justify-between\"\n                            onClick={() => setEditingCell({ row: rowIndex, column: column.key })}\n                          >\n                            <span>{row[column.key] || ''}</span>\n                            <Edit3 className=\"w-3 h-3 text-gray-400 opacity-0 group-hover:opacity-100 transition-opacity\" />\n                          </div>\n                        )}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {filteredData.length === 0 && searchTerm && (\n            <div className=\"text-center py-8 text-gray-500\">\n              No results found for \"{searchTerm}\"\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Footer CTA - Only show when data is loaded */}\n      {data.length > 0 && (\n        <div className=\"mt-8 pt-6 border-t border-gray-200 flex justify-between items-center\">\n          <button \n            onClick={resetDataGrid}\n            className=\"flex items-center gap-2 px-6 py-3 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors font-medium\"\n          >\n            EXIT\n          </button>\n          <button className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors font-medium\">\n            SUBMIT\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACpD,SAASC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,cAAc;AACpF,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC;IAAE0B,GAAG,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAM,CAAC,CAAC;EAC7E,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,IAAIgC,GAAG,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMmC,aAAa,GAAGA,CAAA,KAAM;IAC1BlB,OAAO,CAAC,EAAE,CAAC;IACXE,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,EAAE,CAAC;IACnBE,aAAa,CAAC,EAAE,CAAC;IACjBE,aAAa,CAAC;MAAEC,GAAG,EAAE,IAAI;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC;IAC9CI,eAAe,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;IAC1BE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAGnC,WAAW,CAAEoC,KAAK,IAAK;IAC9C,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEXT,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAIS,IAAI,CAACG,IAAI,KAAK,UAAU,IAAIH,IAAI,CAACI,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,EAAE;MAC1DlC,IAAI,CAACmC,KAAK,CAACN,IAAI,EAAE;QACfO,MAAM,EAAE,IAAI;QACZC,cAAc,EAAE,IAAI;QACpBC,aAAa,EAAE,IAAI;QACnBC,QAAQ,EAAGC,OAAO,IAAK;UACrB,IAAIA,OAAO,CAACjC,IAAI,IAAIiC,OAAO,CAACjC,IAAI,CAACkC,MAAM,GAAG,CAAC,EAAE;YAC3C,MAAMC,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACJ,OAAO,CAACjC,IAAI,CAAC,CAAC,CAAC,CAAC,CAACsC,GAAG,CAAC5B,GAAG,KAAK;cACpDA,GAAG,EAAEA,GAAG,CAAC6B,IAAI,CAAC,CAAC;cACfC,KAAK,EAAE9B,GAAG,CAAC6B,IAAI,CAAC,CAAC;cACjBd,IAAI,EAAE;YACR,CAAC,CAAC,CAAC;YACHtB,UAAU,CAACgC,IAAI,CAAC;YAChBlC,OAAO,CAACgC,OAAO,CAACjC,IAAI,CAAC;YACrBK,eAAe,CAAC4B,OAAO,CAACjC,IAAI,CAAC;UAC/B;UACAa,cAAc,CAAC,KAAK,CAAC;QACvB,CAAC;QACD4B,KAAK,EAAGA,KAAK,IAAK;UAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;UAC1C5B,cAAc,CAAC,KAAK,CAAC;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAIS,IAAI,CAACG,IAAI,KAAK,kBAAkB,EAAE;MAC3C,MAAMkB,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;QACrB,IAAI;UACF,MAAMC,QAAQ,GAAGC,IAAI,CAACpB,KAAK,CAACkB,CAAC,CAACvB,MAAM,CAAC0B,MAAM,CAAC;UAC5C,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,QAAQ,CAAC,GAAGA,QAAQ,GAAG,CAACA,QAAQ,CAAC;UAEjE,IAAIG,SAAS,CAAChB,MAAM,GAAG,CAAC,EAAE;YACxB,MAAMC,IAAI,GAAGC,MAAM,CAACC,IAAI,CAACa,SAAS,CAAC,CAAC,CAAC,CAAC,CAACZ,GAAG,CAAC5B,GAAG,KAAK;cACjDA,GAAG;cACH8B,KAAK,EAAE9B,GAAG;cACVe,IAAI,EAAE;YACR,CAAC,CAAC,CAAC;YACHtB,UAAU,CAACgC,IAAI,CAAC;YAChBlC,OAAO,CAACiD,SAAS,CAAC;YAClB7C,eAAe,CAAC6C,SAAS,CAAC;UAC5B;QACF,CAAC,CAAC,OAAOT,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC7C;QACA5B,cAAc,CAAC,KAAK,CAAC;MACvB,CAAC;MACD8B,MAAM,CAACU,UAAU,CAAC/B,IAAI,CAAC;IACzB;;IAEA;IACAD,KAAK,CAACE,MAAM,CAAC+B,KAAK,GAAG,EAAE;EACzB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,YAAY,GAAGtE,WAAW,CAAEuE,IAAI,IAAK;IACzCjD,aAAa,CAACiD,IAAI,CAAC;IACnB,IAAI,CAACA,IAAI,CAACjB,IAAI,CAAC,CAAC,EAAE;MAChBlC,eAAe,CAACL,IAAI,CAAC;MACrB;IACF;IAEA,MAAMyD,QAAQ,GAAGzD,IAAI,CAAC0D,MAAM,CAACC,GAAG,IAC9BvB,MAAM,CAACwB,MAAM,CAACD,GAAG,CAAC,CAACE,IAAI,CAACP,KAAK,IAC3BQ,MAAM,CAACR,KAAK,CAAC,CAACS,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACR,IAAI,CAACO,WAAW,CAAC,CAAC,CACzD,CACF,CAAC;IACD1D,eAAe,CAACoD,QAAQ,CAAC;EAC3B,CAAC,EAAE,CAACzD,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMiE,UAAU,GAAGhF,WAAW,CAAEiF,SAAS,IAAK;IAC5C,IAAIvD,SAAS,GAAG,KAAK;IACrB,IAAIH,UAAU,CAACE,GAAG,KAAKwD,SAAS,IAAI1D,UAAU,CAACG,SAAS,KAAK,KAAK,EAAE;MAClEA,SAAS,GAAG,MAAM;IACpB;IAEA,MAAMwD,MAAM,GAAG,CAAC,GAAG/D,YAAY,CAAC,CAACgE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC9C,MAAMC,IAAI,GAAGF,CAAC,CAACH,SAAS,CAAC;MACzB,MAAMM,IAAI,GAAGF,CAAC,CAACJ,SAAS,CAAC;MAEzB,IAAIK,IAAI,GAAGC,IAAI,EAAE,OAAO7D,SAAS,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MACpD,IAAI4D,IAAI,GAAGC,IAAI,EAAE,OAAO7D,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MACpD,OAAO,CAAC;IACV,CAAC,CAAC;IAEFN,eAAe,CAAC8D,MAAM,CAAC;IACvB1D,aAAa,CAAC;MAAEC,GAAG,EAAEwD,SAAS;MAAEvD;IAAU,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACP,YAAY,EAAEI,UAAU,CAAC,CAAC;;EAE9B;EACA,MAAMiE,kBAAkB,GAAIC,QAAQ,IAAK;IACvC,MAAMC,WAAW,GAAG,IAAI3D,GAAG,CAACF,YAAY,CAAC;IACzC,IAAI6D,WAAW,CAACC,GAAG,CAACF,QAAQ,CAAC,EAAE;MAC7BC,WAAW,CAACE,MAAM,CAACH,QAAQ,CAAC;IAC9B,CAAC,MAAM;MACLC,WAAW,CAACG,GAAG,CAACJ,QAAQ,CAAC;IAC3B;IACA3D,eAAe,CAAC4D,WAAW,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMI,cAAc,GAAGA,CAACL,QAAQ,EAAER,SAAS,EAAEc,QAAQ,KAAK;IACxD,MAAMC,OAAO,GAAG,CAAC,GAAGjF,IAAI,CAAC;IACzB,MAAMkF,cAAc,GAAGlF,IAAI,CAACmF,SAAS,CAACxB,GAAG,IAAIA,GAAG,KAAKvD,YAAY,CAACsE,QAAQ,CAAC,CAAC;IAC5EO,OAAO,CAACC,cAAc,CAAC,GAAG;MAAE,GAAGD,OAAO,CAACC,cAAc,CAAC;MAAE,CAAChB,SAAS,GAAGc;IAAS,CAAC;IAC/E/E,OAAO,CAACgF,OAAO,CAAC;IAEhB,MAAMG,eAAe,GAAG,CAAC,GAAGhF,YAAY,CAAC;IACzCgF,eAAe,CAACV,QAAQ,CAAC,GAAG;MAAE,GAAGU,eAAe,CAACV,QAAQ,CAAC;MAAE,CAACR,SAAS,GAAGc;IAAS,CAAC;IACnF3E,eAAe,CAAC+E,eAAe,CAAC;IAChClE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMmE,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjBpF,OAAO,CAACqF,OAAO,CAACC,GAAG,IAAI;MACrBF,MAAM,CAACE,GAAG,CAAC9E,GAAG,CAAC,GAAG,EAAE;IACtB,CAAC,CAAC;IACF,MAAMuE,OAAO,GAAG,CAAC,GAAGjF,IAAI,EAAEsF,MAAM,CAAC;IACjCrF,OAAO,CAACgF,OAAO,CAAC;IAChB5E,eAAe,CAAC4E,OAAO,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,eAAe,GAAGvC,KAAK,CAACwC,IAAI,CAAC7E,YAAY,CAAC;IAChD,MAAM8E,YAAY,GAAGF,eAAe,CAACpD,GAAG,CAACuD,KAAK,IAAIzF,YAAY,CAACyF,KAAK,CAAC,CAAC;IAEtE,MAAMZ,OAAO,GAAGjF,IAAI,CAAC0D,MAAM,CAACC,GAAG,IAAI,CAACiC,YAAY,CAAC5B,QAAQ,CAACL,GAAG,CAAC,CAAC;IAC/D1D,OAAO,CAACgF,OAAO,CAAC;IAChB5E,eAAe,CAAC4E,OAAO,CAAC;IACxBlE,eAAe,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAM8E,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,GAAG,GAAGtG,IAAI,CAACuG,OAAO,CAAC5F,YAAY,CAAC;IACtC,MAAM6F,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,GAAG,CAAC,EAAE;MAAEtE,IAAI,EAAE;IAAW,CAAC,CAAC;IAClD,MAAM0E,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;IACrC,MAAM5B,CAAC,GAAGiC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrClC,CAAC,CAACmC,IAAI,GAAGL,GAAG;IACZ9B,CAAC,CAACoC,QAAQ,GAAG,iBAAiB;IAC9BpC,CAAC,CAACqC,KAAK,CAAC,CAAC;IACTN,GAAG,CAACO,eAAe,CAACR,GAAG,CAAC;EAC1B,CAAC;EAED,oBACExG,OAAA;IAAKiH,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDlH,OAAA;MAAKiH,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBlH,OAAA;QAAIiH,SAAS,EAAC,uCAAuC;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5EtH,OAAA;QAAGiH,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAmD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CAAC,EAGLjH,IAAI,CAACkC,MAAM,KAAK,CAAC;IAAA;IAChB;IACAvC,OAAA;MAAKiH,SAAS,EAAC,+FAA+F;MAAAC,QAAA,eAC5GlH,OAAA;QAAKiH,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BlH,OAAA,CAACT,MAAM;UAAC0H,SAAS,EAAC;QAAsC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3DtH,OAAA;UAAOiH,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC/BlH,OAAA;YAAMiH,SAAS,EAAC,uDAAuD;YAAAC,QAAA,EACpEjG,WAAW,GAAG,eAAe,GAAG;UAAkC;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D,CAAC,eACPtH,OAAA;YACE8B,IAAI,EAAC,MAAM;YACXmF,SAAS,EAAC,QAAQ;YAClBM,MAAM,EAAC,YAAY;YACnBC,QAAQ,EAAE/F,gBAAiB;YAC3BgG,QAAQ,EAAExG;UAAY;YAAAkG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eACRtH,OAAA;UAAGiH,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENtH,OAAA,CAAAE,SAAA;MAAAgH,QAAA,gBAEElH,OAAA;QAAKiH,SAAS,EAAC,wDAAwD;QAAAC,QAAA,gBACrElH,OAAA;UAAKiH,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtClH,OAAA;YAAKiH,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBlH,OAAA,CAACP,MAAM;cAACwH,SAAS,EAAC;YAA0E;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/FtH,OAAA;cACE8B,IAAI,EAAC,MAAM;cACX4F,WAAW,EAAC,gBAAgB;cAC5B/D,KAAK,EAAEhD,UAAW;cAClB6G,QAAQ,EAAGrE,CAAC,IAAKS,YAAY,CAACT,CAAC,CAACvB,MAAM,CAAC+B,KAAK,CAAE;cAC9CsD,SAAS,EAAC;YAA6G;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNtH,OAAA;YACE2H,OAAO,EAAEjC,SAAU;YACnBuB,SAAS,EAAC,2GAA2G;YAAAC,QAAA,gBAErHlH,OAAA,CAACJ,IAAI;cAACqH,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,WAE9B;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENtH,OAAA;UAAKiH,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBlH,OAAA;YACE2H,OAAO,EAAEnG,aAAc;YACvByF,SAAS,EAAC,yGAAyG;YAAAC,QAAA,gBAEnHlH,OAAA,CAACT,MAAM;cAAC0H,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,cAEhC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRnG,YAAY,CAACyG,IAAI,GAAG,CAAC,iBACpB5H,OAAA;YACE2H,OAAO,EAAE7B,kBAAmB;YAC5BmB,SAAS,EAAC,uGAAuG;YAAAC,QAAA,gBAEjHlH,OAAA,CAACL,MAAM;cAACsH,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,YACtB,EAACnG,YAAY,CAACyG,IAAI,EAAC,GAC7B;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT,eACDtH,OAAA;YACE2H,OAAO,EAAExB,UAAW;YACpBc,SAAS,EAAC,yGAAyG;YAAAC,QAAA,gBAEnHlH,OAAA,CAACR,QAAQ;cAACyH,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,cAElC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGNtH,OAAA;QAAKiH,SAAS,EAAC,4BAA4B;QAAAC,QAAA,GAAC,UAClC,EAACzG,YAAY,CAAC8B,MAAM,EAAC,MAAI,EAAClC,IAAI,CAACkC,MAAM,EAAC,OAChD;MAAA;QAAA4E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAGNtH,OAAA;QAAKiH,SAAS,EAAC,mDAAmD;QAAAC,QAAA,eAChElH,OAAA;UAAOiH,SAAS,EAAC,qCAAqC;UAAAC,QAAA,gBACpDlH,OAAA;YAAOiH,SAAS,EAAC,YAAY;YAAAC,QAAA,eAC3BlH,OAAA;cAAAkH,QAAA,gBACElH,OAAA;gBAAIiH,SAAS,EAAC,qBAAqB;gBAAAC,QAAA,eACjClH,OAAA;kBACE8B,IAAI,EAAC,UAAU;kBACf0F,QAAQ,EAAGrE,CAAC,IAAK;oBACf,IAAIA,CAAC,CAACvB,MAAM,CAACiG,OAAO,EAAE;sBACpBzG,eAAe,CAAC,IAAIC,GAAG,CAACZ,YAAY,CAACkC,GAAG,CAAC,CAACmF,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC;oBACzD,CAAC,MAAM;sBACL3G,eAAe,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC;oBAC5B;kBACF,CAAE;kBACFwG,OAAO,EAAE1G,YAAY,CAACyG,IAAI,KAAKnH,YAAY,CAAC8B,MAAM,IAAI9B,YAAY,CAAC8B,MAAM,GAAG,CAAE;kBAC9E0E,SAAS,EAAC;gBAA2D;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,EACJ/G,OAAO,CAACoC,GAAG,CAAEqF,MAAM,iBAClBhI,OAAA;gBAEEiH,SAAS,EAAC,iHAAiH;gBAC3HU,OAAO,EAAEA,CAAA,KAAMrD,UAAU,CAAC0D,MAAM,CAACjH,GAAG,CAAE;gBAAAmG,QAAA,eAEtClH,OAAA;kBAAKiH,SAAS,EAAC,yBAAyB;kBAAAC,QAAA,GACrCc,MAAM,CAACnF,KAAK,EACZhC,UAAU,CAACE,GAAG,KAAKiH,MAAM,CAACjH,GAAG,iBAC5Bf,OAAA;oBAAMiH,SAAS,EAAC,eAAe;oBAAAC,QAAA,EAC5BrG,UAAU,CAACG,SAAS,KAAK,KAAK,GAAG,GAAG,GAAG;kBAAG;oBAAAmG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACvC,CACP;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC,GAXDU,MAAM,CAACjH,GAAG;gBAAAoG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYb,CACL,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRtH,OAAA;YAAOiH,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EACjDzG,YAAY,CAACkC,GAAG,CAAC,CAACqB,GAAG,EAAEe,QAAQ,kBAC9B/E,OAAA;cAAmBiH,SAAS,EAAE9F,YAAY,CAAC8D,GAAG,CAACF,QAAQ,CAAC,GAAG,YAAY,GAAG,kBAAmB;cAAAmC,QAAA,gBAC3FlH,OAAA;gBAAIiH,SAAS,EAAC,WAAW;gBAAAC,QAAA,eACvBlH,OAAA;kBACE8B,IAAI,EAAC,UAAU;kBACf+F,OAAO,EAAE1G,YAAY,CAAC8D,GAAG,CAACF,QAAQ,CAAE;kBACpCyC,QAAQ,EAAEA,CAAA,KAAM1C,kBAAkB,CAACC,QAAQ,CAAE;kBAC7CkC,SAAS,EAAC;gBAA2D;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACA,CAAC,EACJ/G,OAAO,CAACoC,GAAG,CAAEqF,MAAM,iBAClBhI,OAAA;gBAAqBiH,SAAS,EAAC,iCAAiC;gBAAAC,QAAA,EAC7D,CAAA5F,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0C,GAAG,MAAKe,QAAQ,IAAI,CAAAzD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE0G,MAAM,MAAKA,MAAM,CAACjH,GAAG,gBAClEf,OAAA;kBACE8B,IAAI,EAAC,MAAM;kBACX6B,KAAK,EAAEK,GAAG,CAACgE,MAAM,CAACjH,GAAG,CAAC,IAAI,EAAG;kBAC7ByG,QAAQ,EAAGrE,CAAC,IAAKiC,cAAc,CAACL,QAAQ,EAAEiD,MAAM,CAACjH,GAAG,EAAEoC,CAAC,CAACvB,MAAM,CAAC+B,KAAK,CAAE;kBACtEsE,MAAM,EAAEA,CAAA,KAAM1G,cAAc,CAAC,IAAI,CAAE;kBACnC2G,UAAU,EAAG/E,CAAC,IAAK;oBACjB,IAAIA,CAAC,CAACpC,GAAG,KAAK,OAAO,EAAE;sBACrBQ,cAAc,CAAC,IAAI,CAAC;oBACtB;kBACF,CAAE;kBACF0F,SAAS,EAAC,2GAA2G;kBACrHkB,SAAS;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC,gBAEFtH,OAAA;kBACEiH,SAAS,EAAC,sFAAsF;kBAChGU,OAAO,EAAEA,CAAA,KAAMpG,cAAc,CAAC;oBAAEyC,GAAG,EAAEe,QAAQ;oBAAEiD,MAAM,EAAEA,MAAM,CAACjH;kBAAI,CAAC,CAAE;kBAAAmG,QAAA,gBAErElH,OAAA;oBAAAkH,QAAA,EAAOlD,GAAG,CAACgE,MAAM,CAACjH,GAAG,CAAC,IAAI;kBAAE;oBAAAoG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACpCtH,OAAA,CAACH,KAAK;oBAACoH,SAAS,EAAC;kBAA4E;oBAAAE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7F;cACN,GAvBMU,MAAM,CAACjH,GAAG;gBAAAoG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAwBf,CACL,CAAC;YAAA,GAnCKvC,QAAQ;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoCb,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAEL7G,YAAY,CAAC8B,MAAM,KAAK,CAAC,IAAI5B,UAAU,iBACtCX,OAAA;QAAKiH,SAAS,EAAC,gCAAgC;QAAAC,QAAA,GAAC,yBACxB,EAACvG,UAAU,EAAC,IACpC;MAAA;QAAAwG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN;IAAA,eACD,CACH,EAGAjH,IAAI,CAACkC,MAAM,GAAG,CAAC,iBACdvC,OAAA;MAAKiH,SAAS,EAAC,sEAAsE;MAAAC,QAAA,gBACnFlH,OAAA;QACE2H,OAAO,EAAEnG,aAAc;QACvByF,SAAS,EAAC,qHAAqH;QAAAC,QAAA,EAChI;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtH,OAAA;QAAQiH,SAAS,EAAC,qHAAqH;QAAAC,QAAA,EAAC;MAExI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClH,EAAA,CA3WID,QAAQ;AAAAiI,EAAA,GAARjI,QAAQ;AA6Wd,eAAeA,QAAQ;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}