{"ast":null,"code":"import React,{useState,useCallback}from'react';import{Upload,Download,Search,Filter,Trash2,Plus,Edit3}from'lucide-react';import Papa from'papaparse';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const DataGrid=()=>{const[data,setData]=useState([]);const[columns,setColumns]=useState([]);const[filteredData,setFilteredData]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[sortConfig,setSortConfig]=useState({key:null,direction:'asc'});const[isUploading,setIsUploading]=useState(false);const[selectedRows,setSelectedRows]=useState(new Set());const[editingCell,setEditingCell]=useState(null);// Reset to initial state\nconst resetDataGrid=()=>{setData([]);setColumns([]);setFilteredData([]);setSearchTerm('');setSortConfig({key:null,direction:'asc'});setSelectedRows(new Set());setEditingCell(null);};// Handle file upload\nconst handleFileUpload=useCallback(event=>{const file=event.target.files[0];if(!file)return;setIsUploading(true);if(file.type==='text/csv'||file.name.endsWith('.csv')){Papa.parse(file,{header:true,skipEmptyLines:true,dynamicTyping:true,complete:results=>{if(results.data&&results.data.length>0){const cols=Object.keys(results.data[0]).map(key=>({key:key.trim(),label:key.trim(),type:'text'}));setColumns(cols);setData(results.data);setFilteredData(results.data);}setIsUploading(false);},error:error=>{console.error('CSV parsing error:',error);setIsUploading(false);}});}else if(file.type==='application/json'){const reader=new FileReader();reader.onload=e=>{try{const jsonData=JSON.parse(e.target.result);const arrayData=Array.isArray(jsonData)?jsonData:[jsonData];if(arrayData.length>0){const cols=Object.keys(arrayData[0]).map(key=>({key,label:key,type:'text'}));setColumns(cols);setData(arrayData);setFilteredData(arrayData);}}catch(error){console.error('JSON parsing error:',error);}setIsUploading(false);};reader.readAsText(file);}// Reset file input\nevent.target.value='';},[]);// Search functionality\nconst handleSearch=useCallback(term=>{setSearchTerm(term);if(!term.trim()){setFilteredData(data);return;}const filtered=data.filter(row=>Object.values(row).some(value=>String(value).toLowerCase().includes(term.toLowerCase())));setFilteredData(filtered);},[data]);// Sort functionality\nconst handleSort=useCallback(columnKey=>{let direction='asc';if(sortConfig.key===columnKey&&sortConfig.direction==='asc'){direction='desc';}const sorted=[...filteredData].sort((a,b)=>{const aVal=a[columnKey];const bVal=b[columnKey];if(aVal<bVal)return direction==='asc'?-1:1;if(aVal>bVal)return direction==='asc'?1:-1;return 0;});setFilteredData(sorted);setSortConfig({key:columnKey,direction});},[filteredData,sortConfig]);// Row selection\nconst toggleRowSelection=rowIndex=>{const newSelected=new Set(selectedRows);if(newSelected.has(rowIndex)){newSelected.delete(rowIndex);}else{newSelected.add(rowIndex);}setSelectedRows(newSelected);};// Cell editing\nconst handleCellEdit=(rowIndex,columnKey,newValue)=>{const newData=[...data];const actualRowIndex=data.findIndex(row=>row===filteredData[rowIndex]);newData[actualRowIndex]={...newData[actualRowIndex],[columnKey]:newValue};setData(newData);const newFilteredData=[...filteredData];newFilteredData[rowIndex]={...newFilteredData[rowIndex],[columnKey]:newValue};setFilteredData(newFilteredData);setEditingCell(null);};// Add new row\nconst addNewRow=()=>{const newRow={};columns.forEach(col=>{newRow[col.key]='';});const newData=[...data,newRow];setData(newData);setFilteredData(newData);};// Delete selected rows\nconst deleteSelectedRows=()=>{const selectedIndices=Array.from(selectedRows);const rowsToDelete=selectedIndices.map(index=>filteredData[index]);const newData=data.filter(row=>!rowsToDelete.includes(row));setData(newData);setFilteredData(newData);setSelectedRows(new Set());};// Export data\nconst exportData=()=>{const csv=Papa.unparse(filteredData);const blob=new Blob([csv],{type:'text/csv'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='data-export.csv';a.click();URL.revokeObjectURL(url);};return/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-7xl mx-auto p-6 bg-white\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold text-gray-900 mb-2\",children:\"Payment Method Data Manager\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Upload CSV or JSON files to view and edit your data\"})]}),data.length===0?/*#__PURE__*//* Upload Section */_jsx(\"div\",{className:\"p-6 border-2 border-dashed border-gray-300 rounded-lg hover:border-blue-400 transition-colors\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(Upload,{className:\"mx-auto h-12 w-12 text-gray-400 mb-4\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"cursor-pointer\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-lg font-medium text-gray-700 hover:text-blue-600\",children:isUploading?'Processing...':'Click to upload or drag and drop'}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"hidden\",accept:\".csv,.json\",onChange:handleFileUpload,disabled:isUploading})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 mt-2\",children:\"CSV or JSON files supported\"})]})}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 flex flex-wrap gap-4 items-center justify-between\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2 items-center\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(Search,{className:\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search data...\",value:searchTerm,onChange:e=>handleSearch(e.target.value),className:\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:addNewRow,className:\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\",children:[/*#__PURE__*/_jsx(Plus,{className:\"w-4 h-4\"}),\"Add Row\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:resetDataGrid,className:\"flex items-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\",children:[/*#__PURE__*/_jsx(Upload,{className:\"w-4 h-4\"}),\"New Upload\"]}),selectedRows.size>0&&/*#__PURE__*/_jsxs(\"button\",{onClick:deleteSelectedRows,className:\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors\",children:[/*#__PURE__*/_jsx(Trash2,{className:\"w-4 h-4\"}),\"Delete (\",selectedRows.size,\")\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:exportData,className:\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\",children:[/*#__PURE__*/_jsx(Download,{className:\"w-4 h-4\"}),\"Export CSV\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 text-sm text-gray-600\",children:[\"Showing \",filteredData.length,\" of \",data.length,\" rows\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto border border-gray-200 rounded-lg\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full divide-y divide-gray-200\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"bg-gray-50\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-3 text-left\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:e=>{if(e.target.checked){setSelectedRows(new Set(filteredData.map((_,i)=>i)));}else{setSelectedRows(new Set());}},checked:selectedRows.size===filteredData.length&&filteredData.length>0,className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"})}),columns.map(column=>/*#__PURE__*/_jsx(\"th\",{className:\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\",onClick:()=>handleSort(column.key),children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center gap-2\",children:[column.label,sortConfig.key===column.key&&/*#__PURE__*/_jsx(\"span\",{className:\"text-blue-600\",children:sortConfig.direction==='asc'?'↑':'↓'})]})},column.key))]})}),/*#__PURE__*/_jsx(\"tbody\",{className:\"bg-white divide-y divide-gray-200\",children:filteredData.map((row,rowIndex)=>/*#__PURE__*/_jsxs(\"tr\",{className:selectedRows.has(rowIndex)?'bg-blue-50':'hover:bg-gray-50',children:[/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedRows.has(rowIndex),onChange:()=>toggleRowSelection(rowIndex),className:\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"})}),columns.map(column=>/*#__PURE__*/_jsx(\"td\",{className:\"px-4 py-3 text-sm text-gray-900\",children:(editingCell===null||editingCell===void 0?void 0:editingCell.row)===rowIndex&&(editingCell===null||editingCell===void 0?void 0:editingCell.column)===column.key?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:row[column.key]||'',onChange:e=>handleCellEdit(rowIndex,column.key,e.target.value),onBlur:()=>setEditingCell(null),onKeyPress:e=>{if(e.key==='Enter'){setEditingCell(null);}},className:\"w-full px-2 py-1 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\",autoFocus:true}):/*#__PURE__*/_jsxs(\"div\",{className:\"cursor-pointer hover:bg-gray-100 p-1 rounded group flex items-center justify-between\",onClick:()=>setEditingCell({row:rowIndex,column:column.key}),children:[/*#__PURE__*/_jsx(\"span\",{children:row[column.key]||''}),/*#__PURE__*/_jsx(Edit3,{className:\"w-3 h-3 text-gray-400 opacity-0 group-hover:opacity-100 transition-opacity\"})]})},column.key))]},rowIndex))})]})}),filteredData.length===0&&searchTerm&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center py-8 text-gray-500\",children:[\"No results found for \\\"\",searchTerm,\"\\\"\"]})]}),data.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 pt-6 border-t border-gray-200 flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:resetDataGrid,className:\"flex items-center gap-2 px-6 py-3 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors font-medium\",children:\"EXIT\"}),/*#__PURE__*/_jsx(\"button\",{className:\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors font-medium\",children:\"SUBMIT\"})]})]});};export default DataGrid;","map":{"version":3,"names":["React","useState","useCallback","Upload","Download","Search","Filter","Trash2","Plus","Edit3","Papa","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","DataGrid","data","setData","columns","setColumns","filteredData","setFilteredData","searchTerm","setSearchTerm","sortConfig","setSortConfig","key","direction","isUploading","setIsUploading","selectedRows","setSelectedRows","Set","editingCell","setEditingCell","resetDataGrid","handleFileUpload","event","file","target","files","type","name","endsWith","parse","header","skipEmptyLines","dynamicTyping","complete","results","length","cols","Object","keys","map","trim","label","error","console","reader","FileReader","onload","e","jsonData","JSON","result","arrayData","Array","isArray","readAsText","value","handleSearch","term","filtered","filter","row","values","some","String","toLowerCase","includes","handleSort","columnKey","sorted","sort","a","b","aVal","bVal","toggleRowSelection","rowIndex","newSelected","has","delete","add","handleCellEdit","newValue","newData","actualRowIndex","findIndex","newFilteredData","addNewRow","newRow","forEach","col","deleteSelectedRows","selectedIndices","from","rowsToDelete","index","exportData","csv","unparse","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","className","children","accept","onChange","disabled","placeholder","onClick","size","checked","_","i","column","onBlur","onKeyPress","autoFocus"],"sources":["/workspaces/uploader/src/DataGrid.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Upload, Download, Search, Filter, Trash2, Plus, Edit3 } from 'lucide-react';\nimport Papa from 'papaparse';\n\nconst DataGrid = () => {\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\n  const [isUploading, setIsUploading] = useState(false);\n  const [selectedRows, setSelectedRows] = useState(new Set());\n  const [editingCell, setEditingCell] = useState(null);\n\n  // Reset to initial state\n  const resetDataGrid = () => {\n    setData([]);\n    setColumns([]);\n    setFilteredData([]);\n    setSearchTerm('');\n    setSortConfig({ key: null, direction: 'asc' });\n    setSelectedRows(new Set());\n    setEditingCell(null);\n  };\n\n  // Handle file upload\n  const handleFileUpload = useCallback((event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    \n    if (file.type === 'text/csv' || file.name.endsWith('.csv')) {\n      Papa.parse(file, {\n        header: true,\n        skipEmptyLines: true,\n        dynamicTyping: true,\n        complete: (results) => {\n          if (results.data && results.data.length > 0) {\n            const cols = Object.keys(results.data[0]).map(key => ({\n              key: key.trim(),\n              label: key.trim(),\n              type: 'text'\n            }));\n            setColumns(cols);\n            setData(results.data);\n            setFilteredData(results.data);\n          }\n          setIsUploading(false);\n        },\n        error: (error) => {\n          console.error('CSV parsing error:', error);\n          setIsUploading(false);\n        }\n      });\n    } else if (file.type === 'application/json') {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        try {\n          const jsonData = JSON.parse(e.target.result);\n          const arrayData = Array.isArray(jsonData) ? jsonData : [jsonData];\n          \n          if (arrayData.length > 0) {\n            const cols = Object.keys(arrayData[0]).map(key => ({\n              key,\n              label: key,\n              type: 'text'\n            }));\n            setColumns(cols);\n            setData(arrayData);\n            setFilteredData(arrayData);\n          }\n        } catch (error) {\n          console.error('JSON parsing error:', error);\n        }\n        setIsUploading(false);\n      };\n      reader.readAsText(file);\n    }\n    \n    // Reset file input\n    event.target.value = '';\n  }, []);\n\n  // Search functionality\n  const handleSearch = useCallback((term) => {\n    setSearchTerm(term);\n    if (!term.trim()) {\n      setFilteredData(data);\n      return;\n    }\n\n    const filtered = data.filter(row =>\n      Object.values(row).some(value =>\n        String(value).toLowerCase().includes(term.toLowerCase())\n      )\n    );\n    setFilteredData(filtered);\n  }, [data]);\n\n  // Sort functionality\n  const handleSort = useCallback((columnKey) => {\n    let direction = 'asc';\n    if (sortConfig.key === columnKey && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n\n    const sorted = [...filteredData].sort((a, b) => {\n      const aVal = a[columnKey];\n      const bVal = b[columnKey];\n      \n      if (aVal < bVal) return direction === 'asc' ? -1 : 1;\n      if (aVal > bVal) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    setFilteredData(sorted);\n    setSortConfig({ key: columnKey, direction });\n  }, [filteredData, sortConfig]);\n\n  // Row selection\n  const toggleRowSelection = (rowIndex) => {\n    const newSelected = new Set(selectedRows);\n    if (newSelected.has(rowIndex)) {\n      newSelected.delete(rowIndex);\n    } else {\n      newSelected.add(rowIndex);\n    }\n    setSelectedRows(newSelected);\n  };\n\n  // Cell editing\n  const handleCellEdit = (rowIndex, columnKey, newValue) => {\n    const newData = [...data];\n    const actualRowIndex = data.findIndex(row => row === filteredData[rowIndex]);\n    newData[actualRowIndex] = { ...newData[actualRowIndex], [columnKey]: newValue };\n    setData(newData);\n    \n    const newFilteredData = [...filteredData];\n    newFilteredData[rowIndex] = { ...newFilteredData[rowIndex], [columnKey]: newValue };\n    setFilteredData(newFilteredData);\n    setEditingCell(null);\n  };\n\n  // Add new row\n  const addNewRow = () => {\n    const newRow = {};\n    columns.forEach(col => {\n      newRow[col.key] = '';\n    });\n    const newData = [...data, newRow];\n    setData(newData);\n    setFilteredData(newData);\n  };\n\n  // Delete selected rows\n  const deleteSelectedRows = () => {\n    const selectedIndices = Array.from(selectedRows);\n    const rowsToDelete = selectedIndices.map(index => filteredData[index]);\n    \n    const newData = data.filter(row => !rowsToDelete.includes(row));\n    setData(newData);\n    setFilteredData(newData);\n    setSelectedRows(new Set());\n  };\n\n  // Export data\n  const exportData = () => {\n    const csv = Papa.unparse(filteredData);\n    const blob = new Blob([csv], { type: 'text/csv' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'data-export.csv';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"w-full max-w-7xl mx-auto p-6 bg-white\">\n      <div className=\"mb-6\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Payment Method Data Manager</h1>\n        <p className=\"text-gray-600\">Upload CSV or JSON files to view and edit your data</p>\n      </div>\n\n      {/* Show uploader when no data, show table when data exists */}\n      {data.length === 0 ? (\n        /* Upload Section */\n        <div className=\"p-6 border-2 border-dashed border-gray-300 rounded-lg hover:border-blue-400 transition-colors\">\n          <div className=\"text-center\">\n            <Upload className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n            <label className=\"cursor-pointer\">\n              <span className=\"text-lg font-medium text-gray-700 hover:text-blue-600\">\n                {isUploading ? 'Processing...' : 'Click to upload or drag and drop'}\n              </span>\n              <input\n                type=\"file\"\n                className=\"hidden\"\n                accept=\".csv,.json\"\n                onChange={handleFileUpload}\n                disabled={isUploading}\n              />\n            </label>\n            <p className=\"text-sm text-gray-500 mt-2\">CSV or JSON files supported</p>\n          </div>\n        </div>\n      ) : (\n        <>\n          {/* Controls */}\n          <div className=\"mb-4 flex flex-wrap gap-4 items-center justify-between\">\n            <div className=\"flex gap-2 items-center\">\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"Search data...\"\n                  value={searchTerm}\n                  onChange={(e) => handleSearch(e.target.value)}\n                  className=\"pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                />\n              </div>\n              <button\n                onClick={addNewRow}\n                className=\"flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                Add Row\n              </button>\n            </div>\n\n            <div className=\"flex gap-2\">\n              <button\n                onClick={resetDataGrid}\n                className=\"flex items-center gap-2 px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors\"\n              >\n                <Upload className=\"w-4 h-4\" />\n                New Upload\n              </button>\n              {selectedRows.size > 0 && (\n                <button\n                  onClick={deleteSelectedRows}\n                  className=\"flex items-center gap-2 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700 transition-colors\"\n                >\n                  <Trash2 className=\"w-4 h-4\" />\n                  Delete ({selectedRows.size})\n                </button>\n              )}\n              <button\n                onClick={exportData}\n                className=\"flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                <Download className=\"w-4 h-4\" />\n                Export CSV\n              </button>\n            </div>\n          </div>\n\n          {/* Data Stats */}\n          <div className=\"mb-4 text-sm text-gray-600\">\n            Showing {filteredData.length} of {data.length} rows\n          </div>\n\n          {/* Data Grid */}\n          <div className=\"overflow-x-auto border border-gray-200 rounded-lg\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-4 py-3 text-left\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={(e) => {\n                        if (e.target.checked) {\n                          setSelectedRows(new Set(filteredData.map((_, i) => i)));\n                        } else {\n                          setSelectedRows(new Set());\n                        }\n                      }}\n                      checked={selectedRows.size === filteredData.length && filteredData.length > 0}\n                      className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                    />\n                  </th>\n                  {columns.map((column) => (\n                    <th\n                      key={column.key}\n                      className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider cursor-pointer hover:bg-gray-100\"\n                      onClick={() => handleSort(column.key)}\n                    >\n                      <div className=\"flex items-center gap-2\">\n                        {column.label}\n                        {sortConfig.key === column.key && (\n                          <span className=\"text-blue-600\">\n                            {sortConfig.direction === 'asc' ? '↑' : '↓'}\n                          </span>\n                        )}\n                      </div>\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {filteredData.map((row, rowIndex) => (\n                  <tr key={rowIndex} className={selectedRows.has(rowIndex) ? 'bg-blue-50' : 'hover:bg-gray-50'}>\n                    <td className=\"px-4 py-3\">\n                      <input\n                        type=\"checkbox\"\n                        checked={selectedRows.has(rowIndex)}\n                        onChange={() => toggleRowSelection(rowIndex)}\n                        className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                      />\n                    </td>\n                    {columns.map((column) => (\n                      <td key={column.key} className=\"px-4 py-3 text-sm text-gray-900\">\n                        {editingCell?.row === rowIndex && editingCell?.column === column.key ? (\n                          <input\n                            type=\"text\"\n                            value={row[column.key] || ''}\n                            onChange={(e) => handleCellEdit(rowIndex, column.key, e.target.value)}\n                            onBlur={() => setEditingCell(null)}\n                            onKeyPress={(e) => {\n                              if (e.key === 'Enter') {\n                                setEditingCell(null);\n                              }\n                            }}\n                            className=\"w-full px-2 py-1 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                            autoFocus\n                          />\n                        ) : (\n                          <div\n                            className=\"cursor-pointer hover:bg-gray-100 p-1 rounded group flex items-center justify-between\"\n                            onClick={() => setEditingCell({ row: rowIndex, column: column.key })}\n                          >\n                            <span>{row[column.key] || ''}</span>\n                            <Edit3 className=\"w-3 h-3 text-gray-400 opacity-0 group-hover:opacity-100 transition-opacity\" />\n                          </div>\n                        )}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          {filteredData.length === 0 && searchTerm && (\n            <div className=\"text-center py-8 text-gray-500\">\n              No results found for \"{searchTerm}\"\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Footer CTA - Only show when data is loaded */}\n      {data.length > 0 && (\n        <div className=\"mt-8 pt-6 border-t border-gray-200 flex justify-between items-center\">\n          <button \n            onClick={resetDataGrid}\n            className=\"flex items-center gap-2 px-6 py-3 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition-colors font-medium\"\n          >\n            EXIT\n          </button>\n          <button className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors font-medium\">\n            SUBMIT\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataGrid;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}